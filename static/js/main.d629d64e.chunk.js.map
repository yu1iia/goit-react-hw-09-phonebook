{"version":3,"sources":["components/Navigation/Navigation.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","redux/contacts/contacts-actions.js","components/Navigation/Navigation.module.css","components/UserMenu/UserMenu.module.css","components/AuthNav/AuthNav.module.css","components/Container/Container.js","components/Loader/Loader.js","components/AppBar/AppBar.module.css","components/Container/Container.module.css","components/Loader/Loader.module.css","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js"],"names":["Navigation","isLoggedIn","useSelector","authSelectors","getIsAuthenticated","to","exact","className","styles","link","activeClassName","activeLink","defaultProps","UserMenu","name","getUsername","dispatch","useDispatch","onLogout","useCallback","authOperations","logOut","container","src","defaultAvatar","alt","width","avatar","button","type","onClick","AuthNav","AppBar","header","PrivateRoute","children","redirectTo","isAuthenticated","routeProps","PublicRoute","restricted","HomeView","lazy","LoginView","RegisterView","ContactsView","App","useEffect","getCurrentUser","Container","fallback","path","addContactRequest","actions","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","items","createReducer","_","payload","state","filter","id","changeFilter","loading","error","contactsReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","devTools","process","exportStore","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","createAction","exports","module","Loading","loaderContainer","color","height","backgroundColor","margin","text-align","transition","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","authActions","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","email","user","token","axios","defaults","baseURL","headers","common","Authorization","authOperation","register","credentials","a","post","response","data","message","logIn","getState","persistedToken","get"],"mappings":"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","file":"static/js/main.d629d64e.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from '../../redux/auth/index';\nimport PropTypes from 'prop-types';\n\nimport styles from './Navigation.module.css';\n\nexport default function Navigation() {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <nav>\n      <NavLink\n        to=\"/\"\n        exact\n        className={styles.link}\n        activeClassName={styles.activeLink}\n      >\n        HOME\n      </NavLink>\n\n      {isLoggedIn && (\n        <NavLink\n          to=\"/contacts\"\n          exact\n          className={styles.link}\n          activeClassName={styles.activeLink}\n        >\n          CONTACTS\n        </NavLink>\n      )}\n    </nav>\n  );\n}\n\nNavigation.defaultProps = {\n  isLoggedIn: false,\n};\n\nNavigation.propTypes = {\n  isLoggedIn: PropTypes.bool,\n};\n","export default __webpack_public_path__ + \"static/media/default-avatar.f3869fdf.png\";","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport defaultAvatar from './default-avatar.png';\n\nimport styles from './UserMenu.module.css';\n\nexport default function UserMenu() {\n  const name = useSelector(authSelectors.getUsername);\n  const dispatch = useDispatch();\n\n  const onLogout = useCallback(() => dispatch(authOperations.logOut()), [\n    dispatch,\n  ]);\n\n  return (\n    <div className={styles.container}>\n      <img src={defaultAvatar} alt=\"\" width=\"32\" className={styles.avatar} />\n      <span className={styles.name}>WELCOME, {name}</span>\n      <button className={styles.button} type=\"button\" onClick={onLogout}>\n        LOGOUT\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport styles from './AuthNav.module.css';\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink\n        to=\"/register\"\n        exact\n        className={styles.link}\n        activeClassName={styles.activeLink}\n      >\n        SIGN UP\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        exact\n        className={styles.link}\n        activeClassName={styles.activeLink}\n      >\n        LOG IN\n      </NavLink>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Navigation from '../Navigation';\nimport UserMenu from '../UserMenu';\nimport AuthNav from '../AuthNav/AuthNav';\nimport { authSelectors } from '../../redux/auth';\n\nimport styles from './AppBar.module.css';\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <header className={styles.header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from '../../redux/auth/index';\n\nexport default function PrivateRoute({\n  children,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from '../../redux/auth/index';\n\nexport default function PublicRoute({\n  isAuthenticated,\n  redirectTo,\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        children\n      )}\n    </Route>\n  );\n}\n","import React, { Suspense, lazy, useEffect } from 'react';\nimport { Switch } from 'react-router-dom';\nimport AppBar from './components/AppBar/AppBar';\nimport Container from './components/Container';\nimport { authOperations } from './redux/auth';\nimport { useDispatch } from 'react-redux';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport Loading from './components/Loader';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <AppBar />\n      <Suspense fallback={<Loading />}>\n        <Switch>\n          <PublicRoute exact path=\"/\">\n            <HomeView />\n          </PublicRoute>\n\n          <PublicRoute path=\"/register\" restricted redirectTo={'/contacts'}>\n            <RegisterView />\n          </PublicRoute>\n\n          <PublicRoute path=\"/login\" restricted redirectTo={'/contacts'}>\n            <LoginView />\n          </PublicRoute>\n\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n            <ContactsView />\n          </PrivateRoute>\n        </Switch>\n      </Suspense>\n    </Container>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} = actions;\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactSuccess]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactError]: () => false,\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n});\n\nconst error = createReducer(null, {});\n\nexport const contactsReducer = combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { authReducer } from \"./auth\";\nimport { contactsReducer } from \"./contacts/contacts-reducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nconst exportStore = {\n  store,\n  persistor,\n};\n\nexport default exportStore;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./styles/base.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactRequest = createAction('fetchContactRequest');\nconst fetchContactSuccess = createAction('fetchContactSuccess');\nconst fetchContactError = createAction('fetchContactError');\n\nconst addContactRequest = createAction('addContactRequest');\nconst addContactSuccess = createAction('addContactSuccess');\nconst addContactError = createAction('addContactError');\n\nconst deleteContactRequest = createAction('deleteContactRequest');\nconst deleteContactSuccess = createAction('deleteContactSuccess');\nconst deleteContactError = createAction('deleteContactError');\n\nconst changeFilter = createAction('contacts/Filter');\n\nconst exports = {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n};\n\nexport default exports;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__Jkma5\",\"activeLink\":\"Navigation_activeLink__XFDxr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__2V7i2\",\"avatar\":\"UserMenu_avatar__13yZV\",\"name\":\"UserMenu_name__3pLJ4\",\"button\":\"UserMenu_button__2NIw0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__1orUc\",\"activeLink\":\"AuthNav_activeLink__2wyFi\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React from 'react';\n\n// import Section from '../Section';\n\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport styles from './Loader.module.css';\n\nconst Loading = () => (\n  <div className={styles.loaderContainer}>\n    <Loader\n      type=\"ThreeDots\"\n      color=\"#9e9d9d\"\n      height={50}\n      width={50}\n      className=\"loader\"\n      backgroundColor=\"transparent\"\n      margin=\"20 auto\"\n      text-align=\"center\"\n      transition=\"background-color 2s ease-out\"\n    />\n  </div>\n);\n\nexport default Loading;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__2p1I5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__13NIT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"Loader_loaderContainer__PkO0L\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nconst registerRequest = createAction(\"auth/registerRequest\");\nconst registerSuccess = createAction(\"auth/registerSuccess\");\nconst registerError = createAction(\"auth/registerError\");\n\nconst loginRequest = createAction(\"auth/loginRequest\");\nconst loginSuccess = createAction(\"auth/loginSuccess\");\nconst loginError = createAction(\"auth/loginError\");\n\nconst logoutRequest = createAction(\"auth/logoutRequest\");\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\nconst logoutError = createAction(\"auth/logoutError\");\n\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\n\nconst authActions = {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n\nexport default authActions;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport authActions from \"./auth-actions\";\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst error = createReducer(null, {\n  [authActions.registerError]: (_, { payload }) => payload,\n  [authActions.loginError]: (_, { payload }) => payload,\n  [authActions.logoutError]: (_, { payload }) => payload,\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  isAuthenticated,\n  user,\n  token,\n  error,\n});\n","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n    token.set(response.data.token);\n\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post('/users/login', credentials);\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nconst authOperation = {\n  register,\n  logIn,\n  logOut,\n  getCurrentUser,\n};\n\nexport default authOperation;\n","const getIsAuthenticated = (state) => state.auth.isAuthenticated;\n\nconst getUsername = (state) => state.auth.user.name;\n\nconst authSelectors = {\n  getIsAuthenticated,\n  getUsername,\n};\n\nexport default authSelectors;\n"],"sourceRoot":""}